/*
 * BRC API
 * This is an API that allows access to Boealps BRC course and participant data.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jeanruggiero@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrcApi);
  }
}(this, function(expect, BrcApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Lecture', function() {
      beforeEach(function() {
        instance = new BrcApi.Lecture();
      });

      it('should create an instance of Lecture', function() {
        // TODO: update the code to test Lecture
        expect(instance).to.be.a(BrcApi.Lecture);
      });

      it('should have the property _number (base name: "number")', function() {
        // TODO: update the code to test the property _number
        expect(instance).to.have.property('_number');
        // expect(instance._number).to.be(expectedValueLiteral);
      });

      it('should have the property topic (base name: "topic")', function() {
        // TODO: update the code to test the property topic
        expect(instance).to.have.property('topic');
        // expect(instance.topic).to.be(expectedValueLiteral);
      });

      it('should have the property time (base name: "time")', function() {
        // TODO: update the code to test the property time
        expect(instance).to.have.property('time');
        // expect(instance.time).to.be(expectedValueLiteral);
      });

      it('should have the property location (base name: "location")', function() {
        // TODO: update the code to test the property location
        expect(instance).to.have.property('location');
        // expect(instance.location).to.be(expectedValueLiteral);
      });

      it('should have the property presentationFile (base name: "presentationFile")', function() {
        // TODO: update the code to test the property presentationFile
        expect(instance).to.have.property('presentationFile');
        // expect(instance.presentationFile).to.be(expectedValueLiteral);
      });

      it('should have the property locationLink (base name: "locationLink")', function() {
        // TODO: update the code to test the property locationLink
        expect(instance).to.have.property('locationLink');
        // expect(instance.locationLink).to.be(expectedValueLiteral);
      });

      it('should have the property potluckLink (base name: "potluckLink")', function() {
        // TODO: update the code to test the property potluckLink
        expect(instance).to.have.property('potluckLink');
        // expect(instance.potluckLink).to.be(expectedValueLiteral);
      });

    });
  });

}));
